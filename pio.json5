{
  definitions: {

    ports: {
      in_wdata:    'dataWidth',
      in_wenable:  'dataWidth',
      in_rdata:    '-dataWidth',

      out_wdata:   '-dataWidth',
      out_wenable: '-dataWidth',
      out_rdata:   'dataWidth',

      irq0: -1,
      irq1: -1
    },

    pSchema: {
      type: 'object',
      properties: {
        dataWidth: {
          title: 'Number of IO pads',
          type: 'integer', minimum: 1, maximum: 32, default: 32
        }
      }
    },

    csrMemMap: {
      name: 'CSR',
      addressBlocks: [{
        name: 'csrAddressBlock',
        baseAddress: 0,
        range: 1024, width: 32,
        usage: 'register',
        volatile: false,
        registers: [{
          name: 'ODATA',
          addressOffset: 0, size: 32,
          displayName: 'Output Data Register',
          fields: [{name: 'data', bits: 32, access: 'read-write'}]
        }, {
          name: 'OENABLE', addressOffset: 4, size: 32,
          displayName: 'Data direction',
          description: 'determines whether the pin is an input or an output. If the data direction bit is a 1, then the pin is an input',
          fields: [{name: 'data', bits: 32, access: 'read-write'}]
        }, {
          name: 'IDATA', addressOffset: 8, size: 32,
          displayName: 'Input data',
          description: 'read the port pins',
          fields: [{name: 'data', bits: 32, access: 'read-only'}]
        }]
      }]
    }
  },
  component: { // configurable, leaf
    vendor: 'sifive',
    library: 'blocks',
    name: 'pio',
    version: '0.1.0',
    busInterfaces: [{
      name: 'irq',
      interfaceMode: 'master',
      busType: {vendor: 'sifive.com', library: 'free', name: 'interrupts', version: '0.1.0'},
      abstractionTypes: [{
        viewRef: 'RTLview',
        portMaps: [
          'irq0',
          'irq1'
        ]
      }]
    }],
    addressSpaces: [{
      name: 'csrAddressSpace',
      range: 1024,
      width: 32
    }],
    memoryMaps: [{$ref: '#/definitions/csrMemMap'}],
    model: {
      views: [{
        name: 'RTLview',
        displayName: 'RTL View',
        description: 'Simple RTL view of a component.',
        envIdentifier: '*Synthesis:',
        componentInstantiationRef: 'VerilogModel'
      }],
      instantiations: [],
      ports: {$ref: '#/definitions/ports'}
    },
    componentGenerators: [],
    fileSets: {
      VerilogFiles: ['pio.v']
    },
    pSchema: {$ref: '#/definitions/pSchema'}
  }
}
